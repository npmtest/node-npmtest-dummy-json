{"/home/travis/build/npmtest/node-npmtest-dummy-json/test.js":"/* istanbul instrument in package npmtest_dummy_json */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-dummy-json/lib.npmtest_dummy_json.js":"/* istanbul instrument in package npmtest_dummy_json */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_dummy_json = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_dummy_json = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-dummy-json/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-dummy-json && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_dummy_json */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_dummy_json\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_dummy_json.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_dummy_json.rollup.js'] =\n            local.assetsDict['/assets.npmtest_dummy_json.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_dummy_json.__dirname +\n                    '/lib.npmtest_dummy_json.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-dummy-json/node_modules/dummy-json/index.js":"var Handlebars = require('handlebars');\nvar fecha = require('fecha');\nvar numbro = require('numbro');\nvar mockdata = require('./lib/mockdata');\nvar helpers = require('./lib/helpers');\nvar utils = require('./lib/utils');\n\nvar dummyjson = {\n  // Global seed for the random number generator\n  seed: null,\n\n  parse: function (string, options) {\n    options = options || {};\n\n    // Merge custom mockdata/helpers into the defaults, items with the same name will override\n    options.mockdata = Handlebars.Utils.extend({}, mockdata, options.mockdata);\n    options.helpers = Handlebars.Utils.extend({}, helpers, options.helpers);\n\n    // If a seed is passed in the options it will override the default one\n    utils.setRandomSeed(options.seed || dummyjson.seed);\n\n    // Certain helpers, such as name and email, attempt to synchronise and use the same values when\n    // called after one-another. This object acts as a cache so the helpers can share their values.\n    options.mockdata.__cache = {};\n\n    return Handlebars.compile(string)(options.mockdata, {\n      helpers: options.helpers,\n      partials: options.partials\n    });\n  },\n\n  // Expose the built-in modules so people can use them in their own helpers\n  mockdata: mockdata,\n  helpers: helpers,\n  utils: utils,\n\n  // Also expose the number and date formatters so people can modify their settings\n  fecha: fecha,\n  numbro: numbro\n};\n\nmodule.exports = dummyjson;\n","/home/travis/build/npmtest/node-npmtest-dummy-json/node_modules/dummy-json/lib/mockdata.js":"var titles = [\n  'Mr', 'Mrs', 'Dr', 'Prof', 'Lord', 'Lady', 'Sir', 'Madam'\n];\n\nvar firstNames = [\n  'Leanne', 'Edward', 'Haydee', 'Lyle', 'Shea', 'Curtis', 'Roselyn', 'Marcus', 'Lyn', 'Lloyd',\n  'Isabelle', 'Francis', 'Olivia', 'Roman', 'Myong', 'Jamie', 'Alexis', 'Vernon', 'Chloe', 'Max',\n  'Kirstie', 'Tyler', 'Katelin', 'Alejandro', 'Hannah', 'Gavin', 'Lynetta', 'Russell', 'Neida',\n  'Kurt', 'Dannielle', 'Aiden', 'Janett', 'Vaughn', 'Michelle', 'Brian', 'Maisha', 'Theo', 'Emma',\n  'Cedric', 'Jocelyn', 'Darrell', 'Grace', 'Ivan', 'Rikki', 'Erik', 'Madeleine', 'Rufus',\n  'Florance', 'Raymond', 'Jenette', 'Danny', 'Kathy', 'Michael', 'Layla', 'Rolf', 'Selma', 'Anton',\n  'Rosie', 'Craig', 'Victoria', 'Andy', 'Lorelei', 'Drew', 'Yuri', 'Miles', 'Raisa', 'Rico',\n  'Rosanne', 'Cory', 'Dori', 'Travis', 'Joslyn', 'Austin', 'Haley', 'Ian', 'Liza', 'Rickey',\n  'Susana', 'Stephen', 'Richelle', 'Lance', 'Jetta', 'Heath', 'Juliana', 'Rene', 'Madelyn', 'Stan',\n  'Eleanore', 'Jason', 'Alexa', 'Adam', 'Jenna', 'Warren', 'Cecilia', 'Benito', 'Elaine', 'Mitch',\n  'Raylene', 'Cyrus'\n];\n\nvar lastNames = [\n  'Flinn', 'Bryd', 'Milligan', 'Keesee', 'Mercer', 'Chapman', 'Zobel', 'Carter', 'Pettey',\n  'Starck', 'Raymond', 'Pullman', 'Drolet', 'Higgins', 'Matzen', 'Tindel', 'Winter', 'Charley',\n  'Schaefer', 'Hancock', 'Dampier', 'Garling', 'Verde', 'Lenihan', 'Rhymer', 'Pleiman', 'Dunham',\n  'Seabury', 'Goudy', 'Latshaw', 'Whitson', 'Cumbie', 'Webster', 'Bourquin', 'Young', 'Rikard',\n  'Brier', 'Luck', 'Porras', 'Gilmore', 'Turner', 'Sprowl', 'Rohloff', 'Magby', 'Wallis', 'Mullens',\n  'Correa', 'Murphy', 'Connor', 'Gamble', 'Castleman', 'Pace', 'Durrett', 'Bourne', 'Hottle',\n  'Oldman', 'Paquette', 'Stine', 'Muldoon', 'Smit', 'Finn', 'Kilmer', 'Sager', 'White', 'Friedrich',\n  'Fennell', 'Miers', 'Carroll', 'Freeman', 'Hollis', 'Neal', 'Remus', 'Pickering', 'Woodrum',\n  'Bradbury', 'Caffey', 'Tuck', 'Jensen', 'Shelly', 'Hyder', 'Krumm', 'Hundt', 'Seal', 'Pendergast',\n  'Kelsey', 'Milling', 'Karst', 'Helland', 'Risley', 'Grieve', 'Paschall', 'Coolidge', 'Furlough',\n  'Brandt', 'Cadena', 'Rebelo', 'Leath', 'Backer', 'Bickers', 'Cappel'\n];\n\nvar companies = [\n  'Unilogic', 'Solexis', 'Dalserve', 'Terrasys', 'Pancast', 'Tomiatech', 'Kancom', 'Iridimax',\n  'Proline', 'Qualcore', 'Thermatek', 'VTGrafix', 'Sunopia', 'WestGate', 'Chromaton', 'Tecomix',\n  'Galcom', 'Zatheon', 'OmniTouch', 'Hivemind', 'MultiServ', 'Citisys', 'Polygan', 'Dynaroc',\n  'Storex', 'Britech', 'Thermolock', 'Cryptonica', 'LoopSys', 'ForeTrust', 'TrueXT', 'LexiconLabs',\n  'Bellgate', 'Dynalab', 'Logico', 'Terralabs', 'CoreMax', 'Polycore', 'Infracom', 'Coolinga',\n  'MultiLingua', 'Conixco', 'QuadNet', 'FortyFour', 'TurboSystems', 'Optiplex', 'Nitrocam',\n  'CoreXTS', 'PeerSys', 'FastMart', 'Westercom', 'Templatek', 'Cirpria', 'FastFreight', 'Baramax',\n  'Superwire', 'Celmax', 'Connic', 'Forecore', 'SmartSystems', 'Ulogica', 'Seelogic', 'DynaAir',\n  'OpenServ', 'Maxcast', 'SixtySix', 'Protheon', 'SkyCenta', 'Eluxa', 'GrafixMedia', 'VenStrategy',\n  'Keycast', 'Opticast', 'Cameratek', 'CorpTek', 'Sealine', 'Playtech', 'Anaplex', 'Hypervision',\n  'Xenosys', 'Hassifix', 'Infratouch', 'Airconix', 'StrategyLine', 'Helixicon', 'MediaDime',\n  'NitroSystems', 'Viewtopia', 'Cryosoft', 'DuoServe', 'Acousticom', 'Freecast', 'CoreRobotics',\n  'Quadtek', 'Haltheon', 'TrioSys', 'Amsquare', 'Sophis', 'Keysoft', 'Creatonix'\n];\n\nvar tlds = [\n  'com', 'org', 'net', 'info', 'edu', 'gov', 'co', 'biz', 'name', 'me', 'mobi', 'club', 'xyz', 'eu'\n];\n\nvar streets = [\n  'Warner Street', 'Ceder Avenue', 'Glendale Road', 'Chester Square', 'Beechmont Parkway',\n  'Carter Street', 'Hinton Road', 'Pitman Street', 'Winston Road', 'Cottontail Road',\n  'Buckley Street', 'Concord Avenue', 'Clemont Street', 'Sleepy Lane', 'Bushey Crescent',\n  'Randolph Street', 'Radcliffe Road', 'Canal Street', 'Ridgewood Drive', 'Highland Drive',\n  'Orchard Road', 'Foster Walk', 'Walford Way', 'Harrington Crescent', 'Emmet Road',\n  'Berkeley Street', 'Clarendon Street', 'Sherman Road', 'Mount Street', 'Hunter Street',\n  'Pearl Street', 'Barret Street', 'Taylor Street', 'Shaftsbury Avenue', 'Paxton Street',\n  'Park Avenue', 'Seaside Drive', 'Tavistock Place', 'Prospect Place', 'Harvard Avenue',\n  'Elton Way', 'Green Street', 'Appleton Street', 'Banner Street', 'Piermont Drive', 'Brook Street',\n  'Main Street', 'Fairmont Avenue', 'Arlington Road', 'Rutherford Street', 'Windsor Avenue',\n  'Maple Street', 'Wandle Street', 'Grosvenor Square', 'Hunt Street', 'Haredale Road',\n  'Glenn Drive', 'Mulholland Drive', 'Baker Street', 'Fuller Road', 'Coleman Avenue', 'Wall Street',\n  'Robinson Street', 'Blakeley Street', 'Alexander Avenue', 'Gartland Street', 'Wooster Road',\n  'Brentwood Drive', 'Colwood Place', 'Rivington Street', 'Bramble Lane', 'Hartswood Road',\n  'Albion Place', 'Waverton Street', 'Sawmill Lane', 'Templeton Parkway', 'Hill Street',\n  'Marsham Street', 'Stockton Lane', 'Lake Drive', 'Elm Street', 'Winchester Drive',\n  'Crockett Street', 'High Street', 'Longford Crescent', 'Moreland Street', 'Sterling Street',\n  'Golden Lane', 'Mercer Street', 'Dunstable Street', 'Chestnut Walk', 'Rutland Drive',\n  'Buckfield Lane', 'Pembrooke Street', 'Tower Lane', 'Willow Avenue', 'Faraday Street',\n  'Springfield Street', 'Crawford Street', 'Hudson Street'\n];\n\nvar cities = [\n  'Beaverton', 'Stanford', 'Baltimore', 'Newcastle', 'Halifax', 'Rockhampton', 'Coventry',\n  'Medford', 'Boulder', 'Dover', 'Waterbury', 'Christchurch', 'Manchester', 'Perth', 'Norwich',\n  'Redmond', 'Plymouth', 'Tacoma', 'Newport', 'Bradford', 'Aspen', 'Wellington', 'Oakland',\n  'Norfolk', 'Durham', 'Portsmouth', 'Detroit', 'Portland', 'Northampton', 'Dayton', 'Charleston',\n  'Irvine', 'Dallas', 'Albany', 'Petersburg', 'Melbourne', 'Southampton', 'Stafford', 'Bridgeport',\n  'Fairfield', 'Dundee', 'Spokane', 'Oakleigh', 'Bristol', 'Sacramento', 'Sheffield', 'Lewisburg',\n  'Miami', 'Brisbane', 'Denver', 'Kingston', 'Burwood', 'Rochester', 'Fresno', 'Cardiff',\n  'Auckland', 'Sudbury', 'Hastings', 'Reno', 'Hillboro', 'Palmerston', 'Oxford', 'Hobart',\n  'Atlanta', 'Wilmington', 'Vancouver', 'Youngstown', 'Hartford', 'London', 'Danbury', 'Birmingham',\n  'Columbia', 'Dublin', 'Chicago', 'Toronto', 'Orlando', 'Toledo', 'Pheonix', 'Bakersfield',\n  'Nottingham', 'Newark', 'Fargo', 'Walkerville', 'Exeter', 'Woodville', 'Greenville', 'Frankston',\n  'Bangor', 'Seattle', 'Canterbury', 'Colchester', 'Boston', 'York', 'Cambridge', 'Brighton',\n  'Lancaster', 'Adelaide', 'Cleveland', 'Telford', 'Richmond'\n];\n\nvar countries = [\n  'Andorra', 'United Arab Emirates', 'Afghanistan', 'Antigua and Barbuda', 'Anguilla', 'Albania',\n  'Armenia', 'Angola', 'Antarctica', 'Argentina', 'American Samoa', 'Austria', 'Australia', 'Aruba',\n  'Åland Islands', 'Azerbaijan', 'Bosnia and Herzegovina', 'Barbados', 'Bangladesh', 'Belgium',\n  'Burkina Faso', 'Bulgaria', 'Bahrain', 'Burundi', 'Benin', 'Saint Barthélemy', 'Bermuda',\n  'Brunei Darussalam', 'Bolivia, Plurinational State of', 'Bonaire, Sint Eustatius and Saba',\n  'Brazil', 'Bahamas', 'Bhutan', 'Bouvet Island', 'Botswana', 'Belarus', 'Belize', 'Canada',\n  'Cocos (Keeling) Islands', 'Congo, the Democratic Republic of the', 'Central African Republic',\n  'Congo', 'Switzerland', 'Côte d\\'Ivoire', 'Cook Islands', 'Chile', 'Cameroon', 'China',\n  'Colombia', 'Costa Rica', 'Cuba', 'Cabo Verde', 'Curaçao', 'Christmas Island', 'Cyprus',\n  'Czech Republic', 'Germany', 'Djibouti', 'Denmark', 'Dominica', 'Dominican Republic', 'Algeria',\n  'Ecuador', 'Estonia', 'Egypt', 'Western Sahara', 'Eritrea', 'Spain', 'Ethiopia', 'Finland',\n  'Fiji', 'Falkland Islands (Malvinas)', 'Micronesia, Federated States of', 'Faroe Islands',\n  'France', 'Gabon', 'United Kingdom of Great Britain and Northern Ireland', 'Grenada', 'Georgia',\n  'French Guiana', 'Guernsey', 'Ghana', 'Gibraltar', 'Greenland', 'Gambia', 'Guinea', 'Guadeloupe',\n  'Equatorial Guinea', 'Greece', 'South Georgia and the South Sandwich Islands', 'Guatemala',\n  'Guam', 'Guinea-Bissau', 'Guyana', 'Hong Kong', 'Heard Island and McDonald Islands', 'Honduras',\n  'Croatia', 'Haiti', 'Hungary', 'Indonesia', 'Ireland', 'Israel', 'Isle of Man', 'India',\n  'British Indian Ocean Territory', 'Iraq', 'Iran, Islamic Republic of', 'Iceland', 'Italy',\n  'Jersey', 'Jamaica', 'Jordan', 'Japan', 'Kenya', 'Kyrgyzstan', 'Cambodia', 'Kiribati', 'Comoros',\n  'Saint Kitts and Nevis', 'Korea, Democratic People\\'s Republic of', 'Korea, Republic of',\n  'Kuwait', 'Cayman Islands', 'Kazakhstan', 'Lao People\\'s Democratic Republic', 'Lebanon',\n  'Saint Lucia', 'Liechtenstein', 'Sri Lanka', 'Liberia', 'Lesotho', 'Lithuania', 'Luxembourg',\n  'Latvia', 'Libya', 'Morocco', 'Monaco', 'Moldova, Republic of', 'Montenegro',\n  'Saint Martin (French part)', 'Madagascar', 'Marshall Islands',\n  'Macedonia, the former Yugoslav Republic of', 'Mali', 'Myanmar', 'Mongolia', 'Macao',\n  'Northern Mariana Islands', 'Martinique', 'Mauritania', 'Montserrat', 'Malta', 'Mauritius',\n  'Maldives', 'Malawi', 'Mexico', 'Malaysia', 'Mozambique', 'Namibia', 'New Caledonia', 'Niger',\n  'Norfolk Island', 'Nigeria', 'Nicaragua', 'Netherlands', 'Norway', 'Nepal', 'Nauru', 'Niue',\n  'New Zealand', 'Oman', 'Panama', 'Peru', 'French Polynesia', 'Papua New Guinea', 'Philippines',\n  'Pakistan', 'Poland', 'Saint Pierre and Miquelon', 'Pitcairn', 'Puerto Rico',\n  'Palestine, State of', 'Portugal', 'Palau', 'Paraguay', 'Qatar', 'Réunion', 'Romania', 'Serbia',\n  'Russian Federation', 'Rwanda', 'Saudi Arabia', 'Solomon Islands', 'Seychelles', 'Sudan',\n  'Sweden', 'Singapore', 'Saint Helena, Ascension and Tristan da Cunha', 'Slovenia',\n  'Svalbard and Jan Mayen', 'Slovakia', 'Sierra Leone', 'San Marino', 'Senegal', 'Somalia',\n  'Suriname', 'South Sudan', 'Sao Tome and Principe', 'El Salvador', 'Sint Maarten (Dutch part)',\n  'Syrian Arab Republic', 'Swaziland', 'Turks and Caicos Islands', 'Chad',\n  'French Southern Territories', 'Togo', 'Thailand', 'Tajikistan', 'Tokelau', 'Timor-Leste',\n  'Turkmenistan', 'Tunisia', 'Tonga', 'Turkey', 'Trinidad and Tobago', 'Tuvalu',\n  'Taiwan, Province of China', 'Tanzania, United Republic of', 'Ukraine', 'Uganda',\n  'United States Minor Outlying Islands', 'United States of America', 'Uruguay', 'Uzbekistan',\n  'Holy See', 'Saint Vincent and the Grenadines', 'Venezuela, Bolivarian Republic of',\n  'Virgin Islands, British', 'Virgin Islands, U.S.', 'Viet Nam', 'Vanuatu', 'Wallis and Futuna',\n  'Samoa', 'Yemen', 'Mayotte', 'South Africa', 'Zambia', 'Zimbabwe'\n];\n\nvar countryCodes = [\n  'AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ',\n  'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS',\n  'BT', 'BV', 'BW', 'BY', 'BZ', 'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN',\n  'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ', 'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ', 'EC', 'EE',\n  'EG', 'EH', 'ER', 'ES', 'ET', 'FI', 'FJ', 'FK', 'FM', 'FO', 'FR', 'GA', 'GB', 'GD', 'GE', 'GF',\n  'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY', 'HK', 'HM',\n  'HN', 'HR', 'HT', 'HU', 'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT', 'JE', 'JM',\n  'JO', 'JP', 'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ', 'LA', 'LB', 'LC',\n  'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY', 'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK',\n  'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ', 'NA',\n  'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ', 'OM', 'PA', 'PE', 'PF', 'PG',\n  'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY', 'QA', 'RE', 'RO', 'RS', 'RU', 'RW',\n  'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS',\n  'ST', 'SV', 'SX', 'SY', 'SZ', 'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO',\n  'TR', 'TT', 'TV', 'TW', 'TZ', 'UA', 'UG', 'UM', 'US', 'UY', 'UZ', 'VA', 'VC', 'VE', 'VG', 'VI',\n  'VN', 'VU', 'WF', 'WS', 'YE', 'YT', 'ZA', 'ZM', 'ZW'\n];\n\nvar colors = [\n  'aliceblue', 'antiquewhite', 'aqua', 'aquamarine', 'azure', 'beige', 'bisque', 'black',\n  'blanchedalmond', 'blue', 'blueviolet', 'brown', 'burlywood', 'cadetblue', 'chartreuse',\n  'chocolate', 'coral', 'cornflowerblue', 'cornsilk', 'crimson', 'cyan', 'darkblue', 'darkcyan',\n  'darkgoldenrod', 'darkgray', 'darkgreen', 'darkkhaki', 'darkmagenta', 'darkolivegreen',\n  'darkorange', 'darkorchid', 'darkred', 'darksalmon', 'darkseagreen', 'darkslateblue',\n  'darkslategray', 'darkturquoise', 'darkviolet', 'deeppink', 'deepskyblue', 'dimgray',\n  'dodgerblue', 'firebrick', 'floralwhite', 'forestgreen', 'fuchsia', 'gainsboro', 'ghostwhite',\n  'gold', 'goldenrod', 'gray', 'green', 'greenyellow', 'honeydew', 'hotpink', 'indianred', 'indigo',\n  'ivory', 'khaki', 'lavender', 'lavenderblush', 'lawngreen', 'lemonchiffon', 'lightblue',\n  'lightcoral', 'lightcyan', 'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightpink',\n  'lightsalmon', 'lightseagreen', 'lightskyblue', 'lightslategray', 'lightsteelblue', 'lightyellow',\n  'lime', 'limegreen', 'linen', 'magenta', 'maroon', 'mediumaquamarine', 'mediumblue',\n  'mediumorchid', 'mediumpurple', 'mediumseagreen', 'mediumslateblue', 'mediumspringgreen',\n  'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream', 'mistyrose', 'moccasin',\n  'navajowhite', 'navy', 'oldlace', 'olive', 'olivedrab', 'orange', 'orangered', 'orchid',\n  'palegoldenrod', 'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip', 'peachpuff', 'peru',\n  'pink', 'plum', 'powderblue', 'purple', 'rebeccapurple', 'red', 'rosybrown', 'royalblue',\n  'saddlebrown', 'salmon', 'sandybrown', 'seagreen', 'seashell', 'sienna', 'silver', 'skyblue',\n  'slateblue', 'slategray', 'snow', 'springgreen', 'steelblue', 'tan', 'teal', 'thistle', 'tomato',\n  'turquoise', 'violet', 'wheat', 'white', 'whitesmoke', 'yellow', 'yellowgreen'\n];\n\nvar lorem = [\n  'lorem', 'ipsum', 'dolor', 'sit', 'amet', 'consectetur', 'adipiscing', 'elit', 'morbi',\n  'vulputate', 'eros', 'ut', 'mi', 'laoreet', 'viverra', 'nunc', 'lacinia', 'non', 'condimentum',\n  'aenean', 'lacus', 'nisl', 'auctor', 'at', 'tortor', 'ac', 'fringilla', 'sodales', 'pretium',\n  'quis', 'iaculis', 'in', 'aliquam', 'ultrices', 'felis', 'accumsan', 'ornare', 'etiam',\n  'elementum', 'aliquet', 'finibus', 'maecenas', 'dignissim', 'vel', 'blandit', 'placerat', 'sed',\n  'tempor', 'ex', 'faucibus', 'velit', 'nam', 'erat', 'augue', 'quisque', 'nulla', 'maximus',\n  'vitae', 'e', 'lobortis', 'euismod', 'tristique', 'metus', 'vehicula', 'purus', 'diam', 'mollis',\n  'neque', 'eu', 'porttitor', 'mauris', 'a', 'risus', 'orci', 'tincidunt', 'scelerisque',\n  'vestibulum', 'dui', 'ante', 'posuere', 'turpis', 'enim', 'cras', 'massa', 'cursus', 'suscipit',\n  'tempus', 'facilisis', 'ultricies', 'i', 'eget', 'imperdiet', 'donec', 'arcu', 'ligula',\n  'sagittis', 'hendrerit', 'justo', 'pellentesque', 'mattis', 'lacinia', 'leo', 'est', 'magna',\n  'nibh', 'sem', 'natoque', 'consequat', 'proin', 'eti', 'commodo', 'rhoncus', 'dictum', 'id',\n  'pharetra', 'sapien', 'gravida', 'sollicitudin', 'curabitur', 'au', 'nisi', 'bibendum', 'lectus',\n  'et', 'pulvinar'\n];\n\nmodule.exports = {\n  titles: titles,\n  firstNames: firstNames,\n  lastNames: lastNames,\n  companies: companies,\n  tlds: tlds,\n  streets: streets,\n  cities: cities,\n  countries: countries,\n  countryCodes: countryCodes,\n  colors: colors,\n  lorem: lorem\n};\n","/home/travis/build/npmtest/node-npmtest-dummy-json/node_modules/dummy-json/lib/helpers.js":"var os = require('os');\nvar Handlebars = require('handlebars');\nvar numbro = require('numbro');\nvar fecha = require('fecha');\nvar utils = require('./utils');\n\n// Generating int and floats is very similar so we route both to this single function\nfunction getNumber (type, min, max, format, options) {\n  var ret;\n\n  // Juggle the arguments if the user didn't supply a format string\n  if (!options) {\n    options = format;\n    format = null;\n  }\n\n  if (type === 'int') {\n    ret = utils.randomInt(min, max);\n  } else if (type === 'float') {\n    ret = utils.randomFloat(min, max);\n  }\n\n  if (typeof options.hash.round === 'number') {\n    ret = Math.round(ret / options.hash.round) * options.hash.round;\n  }\n\n  if (format) {\n    ret = numbro(ret).format(format);\n  }\n\n  return ret;\n}\n\n// Generating time and dates is very similar so we route both to this single function\nfunction getDate (type, min, max, format, options) {\n  var ret;\n\n  // Juggle the arguments if the user didn't supply a format string\n  if (!options) {\n    options = format;\n    format = null;\n  }\n\n  if (type === 'date') {\n    min = Date.parse(min);\n    max = Date.parse(max);\n  } else if (type === 'time') {\n    min = Date.parse('1970-01-01T' + min);\n    max = Date.parse('1970-01-01T' + max);\n  }\n\n  ret = utils.randomDate(min, max);\n\n  if (format === 'unix') {\n    // We need to undo the timezone offset fix from utils.randomDate()\n    ret = Math.floor((ret.getTime() - ret.getTimezoneOffset() * 60000) / 1000);\n  } else if (format) {\n    ret = fecha.format(ret, format);\n  } else if (type === 'time') {\n    // Time has a default format if one is not specified\n    ret = fecha.format(ret, 'HH:mm');\n  }\n\n  return ret;\n}\n\nfunction getFirstName (options) {\n  // The value is cached so that other helpers can use it.\n  // Each helper is allowed to use the cached value just once.\n  var cache = options.data.root.__cache;\n  var ret = utils.randomArrayItem(options.data.root.firstNames);\n  cache.firstName = ret;\n  cache.username_firstName = ret;\n  cache.email_firstName = ret;\n  return ret;\n}\n\nfunction getLastName (options) {\n  // The value is cached so that other helpers can use it.\n  // Each helper is allowed to use the cached value just once.\n  var cache = options.data.root.__cache;\n  var ret = utils.randomArrayItem(options.data.root.lastNames);\n  cache.lastName = ret;\n  cache.username_lastName = ret;\n  cache.email_lastName = ret;\n  return ret;\n}\n\nfunction getCompany (options) {\n  // The value is cached so that other helpers can use it.\n  // Each helper is allowed to use the cached value just once.\n  var cache = options.data.root.__cache;\n  var ret = utils.randomArrayItem(options.data.root.companies);\n  cache.company = ret;\n  cache.domain_company = ret;\n  cache.email_company = ret;\n  return ret;\n}\n\nfunction getTld (options) {\n  // The value is cached so that other helpers can use it.\n  // Each helper is allowed to use the cached value just once.\n  var cache = options.data.root.__cache;\n  var tld = utils.randomArrayItem(options.data.root.tlds);\n  cache.tld = tld;\n  cache.domain_tld = tld;\n  cache.email_tld = tld;\n  return tld;\n}\n\nvar helpers = {\n  repeat: function (min, max, options) {\n    var ret = '';\n    var total = 0;\n    var data;\n    var i;\n\n    if (arguments.length === 3) {\n      // If given two numbers then pick a random one between the two\n      total = utils.randomInt(min, max);\n    } else if (arguments.length === 2) {\n      // If given one number then just use it as a fixed repeat total\n      options = max;\n      total = min;\n    } else {\n      throw new Error('The repeat helper requires a numeric param');\n    }\n\n    // Create a shallow copy of data so we can add variables without modifying the original\n    data = Handlebars.Utils.extend({}, options.data);\n\n    for (i = 0; i < total; i++) {\n      // Clear the linked values on each iteration so a new set of names/companies is generated\n      options.data.root.__cache = {};\n\n      // You can access these in your template using @index, @total, @first, @last\n      data.index = i;\n      data.total = total;\n      data.first = i === 0;\n      data.last = i === total - 1;\n\n      // By using 'this' as the context the repeat block will inherit the current scope\n      ret = ret + options.fn(this, {data: data});\n\n      if (options.hash.comma !== false) {\n        // Trim any whitespace left by handlebars and add a comma if it doesn't already exist,\n        // also trim any trailing commas that might be at the end of the loop\n        ret = ret.trimRight();\n        if (i < total - 1 && ret.charAt(ret.length - 1) !== ',') {\n          ret += ',';\n        } else if (i === total - 1 && ret.charAt(ret.length - 1) === ',') {\n          ret = ret.slice(0, -1);\n        }\n        ret += os.EOL;\n      }\n    }\n\n    return ret;\n  },\n\n  int: function (min, max, format, options) {\n    if (arguments.length !== 3 && arguments.length !== 4) {\n      throw new Error('The int helper requires two numeric params');\n    }\n    return getNumber('int', min, max, format, options);\n  },\n\n  float: function (min, max, format, options) {\n    if (arguments.length !== 3 && arguments.length !== 4) {\n      throw new Error('The float helper requires two numeric params');\n    }\n    return getNumber('float', min, max, format, options);\n  },\n\n  boolean: function () {\n    return utils.randomBoolean().toString();\n  },\n\n  date: function (min, max, format, options) {\n    if (arguments.length !== 3 && arguments.length !== 4) {\n      throw new Error('The date helper requires two string params');\n    }\n    return getDate('date', min, max, format, options);\n  },\n\n  time: function (min, max, format, options) {\n    if (arguments.length !== 3 && arguments.length !== 4) {\n      throw new Error('The time helper requires two string params');\n    }\n    return getDate('time', min, max, format, options);\n  },\n\n  title: function (options) {\n    return utils.randomArrayItem(options.data.root.titles);\n  },\n\n  firstName: function (options) {\n    // Try to use the cached values first, otherwise generate a new value\n    var cache = options.data.root.__cache;\n    var ret = cache.firstName || getFirstName(options);\n\n    // The cached values are cleared so they can't be used again\n    cache.firstName = null;\n    return ret;\n  },\n\n  lastName: function (options) {\n    // Try to use the cached values first, otherwise generate a new value\n    var cache = options.data.root.__cache;\n    var ret = cache.lastName || getLastName(options);\n\n    // The cached values are cleared so they can't be used again\n    cache.lastName = null;\n    return ret;\n  },\n\n  username: function (options) {\n    // Try to use the cached values first, otherwise generate a new value\n    var cache = options.data.root.__cache;\n    var first = cache.username_firstName || getFirstName(options);\n    var last = cache.username_lastName || getLastName(options);\n\n    // The cached values are cleared so they can't be used again\n    cache.username_firstName = null;\n    cache.username_lastName = null;\n\n    return first.substr(0, 1).toLowerCase() + last.toLowerCase();\n  },\n\n  company: function (options) {\n    // Try to use the cached values first, otherwise generate a new value\n    var cache = options.data.root.__cache;\n    var company = cache.company || getCompany(options);\n\n    // The cached values are cleared so they can't be used again\n    cache.company = null;\n    return company;\n  },\n\n  tld: function (options) {\n    // Try to use the cached values first, otherwise generate a new value\n    var cache = options.data.root.__cache;\n    var tld = cache.tld || getTld(options);\n\n    // The cached values are cleared so they can't be used again\n    cache.tld = null;\n    return tld;\n  },\n\n  domain: function (options) {\n    // Try to use the cached values first, otherwise generate a new value\n    var cache = options.data.root.__cache;\n    var company = cache.domain_company || getCompany(options);\n    var tld = cache.domain_tld || getTld(options);\n\n    // The cached values are cleared so they can't be used again\n    cache.domain_company = null;\n    cache.domain_tld = null;\n\n    return company.toLowerCase() + '.' + tld;\n  },\n\n  email: function (options) {\n    // Try to use the cached values first, otherwise generate a new value\n    var cache = options.data.root.__cache;\n    var first = cache.email_firstName || getFirstName(options);\n    var last = cache.email_lastName || getLastName(options);\n    var company = cache.email_company || getCompany(options);\n    var tld = cache.email_tld || getTld(options);\n\n    // The cached values are cleared so they can't be used again\n    cache.email_firstName = null;\n    cache.email_lastName = null;\n    cache.email_company = null;\n    cache.email_tld = null;\n\n    return first.toLowerCase() + '.' + last.toLowerCase() +\n      '@' + company.toLowerCase() + '.' + tld;\n  },\n\n  street: function (options) {\n    return utils.randomArrayItem(options.data.root.streets);\n  },\n\n  city: function (options) {\n    return utils.randomArrayItem(options.data.root.cities);\n  },\n\n  country: function (options) {\n    var ret;\n    var rootData = options.data.root;\n    var cache = rootData.__cache;\n\n    // Try to use the cached values first, otherwise generate a new value\n    if (cache.country) {\n      ret = cache.country;\n    } else {\n      var pos = utils.randomInt(0, rootData.countries.length - 1);\n      ret = rootData.countries[pos];\n      cache.countryCode = rootData.countryCodes[pos];\n    }\n\n    // The cached values are cleared so they can't be used again\n    cache.country = null;\n    return ret;\n  },\n\n  countryCode: function (options) {\n    var ret;\n    var rootData = options.data.root;\n    var cache = rootData.__cache;\n\n    // Try to use the cached values first, otherwise generate a new value\n    if (cache.countryCode) {\n      ret = cache.countryCode;\n    } else {\n      var pos = utils.randomInt(0, rootData.countries.length - 1);\n      ret = rootData.countryCodes[pos];\n      cache.country = rootData.countries[pos];\n    }\n\n    // The cached values are cleared so they can't be used again\n    cache.countryCode = null;\n    return ret;\n  },\n\n  zipcode: function () {\n    return ('0' + utils.randomInt(1000, 99999).toString()).slice(-5);\n  },\n\n  postcode: function () {\n    return utils.randomChar() + utils.randomChar() + utils.randomInt(0, 9) + ' ' +\n      utils.randomInt(0, 9) + utils.randomChar() + utils.randomChar();\n  },\n\n  lat: function (options) {\n    return getNumber('float', -90, 90, '0.000000', options);\n  },\n\n  long: function (options) {\n    return getNumber('float', -180, 180, '0.000000', options);\n  },\n\n  phone: function (format) {\n    // Provide a default format if one is not given\n    format = (typeof format === 'string') ? format : 'xxx-xxx-xxxx';\n    return format.replace(/x/g, function () {\n      return utils.randomInt(0, 9);\n    });\n  },\n\n  guid: function () {\n    var ret = '';\n    var i = 0;\n    var mask = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n    var c, r, v;\n\n    while (i++ < 36) {\n      c = mask[i - 1];\n      r = utils.random() * 16 | 0;\n      v = (c === 'x') ? r : (r & 0x3 | 0x8);\n      ret += (c === '-' || c === '4') ? c : v.toString(16);\n    }\n\n    return ret;\n  },\n\n  ipv4: function () {\n    return utils.randomInt(1, 255) + '.' + utils.randomInt(0, 255) + '.' +\n      utils.randomInt(0, 255) + '.' + utils.randomInt(0, 255);\n  },\n\n  ipv6: function () {\n    return utils.randomInt(1, 0xffff).toString(16) + ':' +\n      utils.randomInt(0, 0xffff).toString(16) + ':' +\n      utils.randomInt(0, 0xffff).toString(16) + ':' +\n      utils.randomInt(0, 0xffff).toString(16) + ':' +\n      utils.randomInt(0, 0xffff).toString(16) + ':' +\n      utils.randomInt(0, 0xffff).toString(16) + ':' +\n      utils.randomInt(0, 0xffff).toString(16) + ':' +\n      utils.randomInt(0, 0xffff).toString(16);\n  },\n\n  color: function (options) {\n    return utils.randomArrayItem(options.data.root.colors);\n  },\n\n  hexColor: function (options) {\n    var r = utils.randomInt(0, 0xff);\n    var g = utils.randomInt(0, 0xff);\n    var b = utils.randomInt(0, 0xff);\n\n    if (options.hash.websafe === true) {\n      r = Math.round(r / 0x33) * 0x33;\n      g = Math.round(g / 0x33) * 0x33;\n      b = Math.round(b / 0x33) * 0x33;\n    }\n\n    // Ensure that single digit values are padded with leading zeros\n    return '#' +\n      ('0' + r.toString(16)).slice(-2) +\n      ('0' + g.toString(16)).slice(-2) +\n      ('0' + b.toString(16)).slice(-2);\n  },\n\n  lorem: function (totalWords, options) {\n    var ret = '';\n    var i, word;\n    var isNewSentence = true;\n    var lastPunctuationIndex = 0;\n\n    // Juggle the arguments if totalWords wasn't provided\n    if (!options) {\n      options = totalWords;\n      totalWords = 25;\n    }\n\n    for (i = 0; i < totalWords; i++) {\n      word = utils.randomArrayItem(options.data.root.lorem);\n\n      // If the last iteration triggered a new sentence then capitalize the first letter\n      if (isNewSentence) {\n        word = word.charAt(0).toUpperCase() + word.slice(1);\n        isNewSentence = false;\n      }\n\n      // Only introduce new punctuation if we're more then 3 words away from the end,\n      // and more than 3 words since the last punctuation, and a 1 in 3 chance.\n      if (i < totalWords - 3 && i - lastPunctuationIndex > 3 && utils.random() < 0.3) {\n        isNewSentence = utils.random() < 0.6;\n        word = word + (isNewSentence ? '.' : ',');\n        lastPunctuationIndex = i;\n      }\n\n      ret = ret + word + ' ';\n    }\n\n    // Add a period/full-stop at the very end\n    ret = ret.trimRight() + '.';\n    return ret;\n  },\n\n  lowercase: function (value) {\n    return value.toLowerCase();\n  },\n\n  uppercase: function (value) {\n    return value.toUpperCase();\n  }\n};\n\nmodule.exports = helpers;\n","/home/travis/build/npmtest/node-npmtest-dummy-json/node_modules/dummy-json/lib/utils.js":"var seedrandom = require('seedrandom');\n\n// Create an instance of the prng without a seed (so it'll be a random sequence every time)\nvar prng = seedrandom();\n\nvar utils = {\n  setRandomSeed: function (seed) {\n    prng = seedrandom(seed);\n  },\n\n  random: function () {\n    return prng();\n  },\n\n  randomInt: function (min, max) {\n    return Math.floor(utils.random() * (max - min + 1)) + min;\n  },\n\n  randomFloat: function (min, max) {\n    return utils.random() * (max - min) + min;\n  },\n\n  randomBoolean: function () {\n    return utils.random() < 0.5;\n  },\n\n  randomDate: function (min, max) {\n    // We add the timezone offset to avoid the date falling outside the supplied range\n    var d = new Date(Math.floor(utils.random() * (max - min)) + min);\n    d.setTime(d.getTime() + d.getTimezoneOffset() * 60000);\n    return d;\n  },\n\n  randomArrayItem: function (array) {\n    return array[utils.randomInt(0, array.length - 1)];\n  },\n\n  randomChar: function (charset) {\n    charset = charset || 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    return charset.charAt(utils.randomInt(0, charset.length - 1));\n  }\n};\n\nmodule.exports = utils;\n"}